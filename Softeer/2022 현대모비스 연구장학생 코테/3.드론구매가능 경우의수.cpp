// ## **드론 구매의 경우의 수**

// **제한시간 : C/C++(1초), Java/Python(2초)| 메모리 제한 : 256MB**

// 당신은 드론을 구매하려고 N개의 드론이 일렬로 나열되어 있는 판매장을 방문하였다. 이 매장의 판매 정책은 특이하여, 하나의 구간을 정해 그 구간 안의 드론은 모두 사야 한다.예를 들어, 3째부터 6번째까지 4대의 드론을 모두 사는 것은 가능하지만, 3번째와 6번째 드론 두 개만 사는 것은 불가능하다. 또 구간 안에 최소 하나의 드론은 포함되어야 하고, 동일한 모델의 드론을 두 개 이상 포함하는 구간은 선택할 수 없다. 구매 구간을 선택할 수 있는 방법의 경우의 수는 얼마인지 계산하라.

// **입력형식**

// 입력으로는 드론의 개수인 N이 첫 줄에 주어진다(1 ≤ N ≤ 200,000).다음 줄에 드론의 모델 번호를 나타내는 N개의 정수가 주어진다.모델 번호로 주어지는 값은 1 이상 200,000 이하이다.

// **출력형식**

// 경우의 수를 출력한다.

// **입력예제1**

// ```
// 5
// 3 3 1 1 1
// ```

// **출력예제1**

// ```
// 6
// ```

// **예제 1 부연 설명**

// 당신이 선택할 수 있는 드론이 총 5대(N=5) 진열 되어있다.


// 문제에서 주어진 조건을 보면 선택하는 구간에 최소 하나의 드론은 포함되어야 하고, 동일한 모델의 드론을 두 개 이상 포함하는 구간은 선택할 수 없다. 우선, 각 진열장에 있는 드론을 하나씩 선택하는 경우의 수가 5가지[진열장 1번만 선택, 2번만 선택, 3번만 선택, 4번만 선택, 5번만 선택]가 된다. 그리고 동일한 모델의 드론이 한 개씩만 포함되는 구간을 선택하는 경우의 수는 1가지[진열장 2, 3번 선택]가 된다. 따라서 구매 구간을 선택할 수 있는 방법의 경우의 수는 총 6가지가 된다.

// **입력예제2**

// ```
// 6
// 1 3 2 1 5 4
// ```

// **출력예제2**

//1
#include <iostream>
#include <algorithm>
#include <vector>
#include <iterator>

using namespace std;

int main(int argc, char** argv)
{
	int n, cnt, a, res=0, sw;
	int arr[200001], buycase[200001];
	scanf("%d", &n);
	for(int i=0; i<n; i++)
	{
		scanf("%d", &a);
		arr[i]=a;
	}
	buycase[1]=n;
	for(int j=2; j<=n; j++)
	{
		cnt=0;
		for(int i=0; i<=n-j;i++)
		{
			int ch[200001]={};
			sw=0;
			for(int k=0; k<j; k++)
			{
                if(ch[arr[i+k]]==0)ch[arr[i+k]] = 1;								
                else{
                    sw=1;
                    break;
                }
			}
            if(sw==0)cnt++;
        }
        buycase[j]=cnt;
    }
    for(int j=1; j<=n; j++)
    {
        res += buycase[j];
    }
    printf("%d", res);
    return 0;
}